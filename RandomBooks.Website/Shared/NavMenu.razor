@inject ICategoryService CategoryService
@inject NavigationManager NavigationManager
@implements IDisposable

<div>
    <nav class="flex-nav">
        <div class="nav-item px-3">
            <h3 style="cursor: pointer;" class="text-white my-2" @onclick="Home">
                <i class="fa-solid fa-book-open"></i> Random Books
            </h3>
        </div>

        <div class="nav-item dropdown ps-3">
            <a class="dropdown-toggle" href="" style="padding: 8px 16px;" role="button" id="dropdownMenuLink" data-bs-toggle="dropdown" aria-expanded="false">
                     Books
                </a>
            
            <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenuLink">
                @foreach (var category in CategoryService.Categories)
                {
                    <a class="dropdown-item" href="@GetURLFromName(@category.Name)">@category.Name</a>
                }
            </div>
        </div>

        <div class="nav-item px-1">
            <NavLink class="nav-link text-white" href="contact">
                Contact
            </NavLink>
        </div>

        <div class="nav-item my-auto ml-auto mr-2">
            <AuthenticateButton />
        </div>
    </nav>
</div>

@code {
    private bool showCategories = false;
    private string CategoriesCssClass => showCategories ? "show-menu" : null;

    private void ToggleCategories()
    {
        showCategories = !showCategories;
    }

    private async Task HideCategories()
    {
        await Task.Delay(100);
        showCategories = false;
    }

    protected override async Task OnInitializedAsync()
    {
        await CategoryService.GetCategories();
        CategoryService.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        CategoryService.OnChange -= StateHasChanged;
    }

    private string GetURLFromName(string name)
    {
        if (name == "All books")
            return "books";
        
        var categoryUrl = name.ToLower().Trim().Replace(' ', '-');
        return $"books/{categoryUrl}";
    }

    private void Home()
    {
        NavigationManager.NavigateTo("");
    }
}
