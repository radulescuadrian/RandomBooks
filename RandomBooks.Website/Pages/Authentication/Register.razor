@page "/register"
@layout Shared.Layouts.EmptyLayout
@using RandomBooks.Shared.Authentication
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<div class="card w-50 mx-auto">
    <h4 class="card-header bg-black text-white">Register</h4>
    <div class="card-body">
        <EditForm Model="user" OnValidSubmit="HandleRegistration">
            <DataAnnotationsValidator />
            <div class="form-group mb-3">
                <label for="username">Username</label>
                <InputText class="form-control" id="username" @bind-Value="user.Username" />
                <ValidationMessage For="@(() => user.Username)" />
            </div>
            <div class="form-group mb-3">
                <label for="password">Password</label>
                <InputText class="form-control" id="password" @bind-Value="user.Password" type="password" />
                <ValidationMessage For="@(() => user.Password)" />
            </div>
            <div class="form-group mb-3">
                <label for="confirmPassword">Confirm Password</label>
                <InputText class="form-control" id="confirmPassword" @bind-Value="user.ConfirmPassword" type="password" />
                <ValidationMessage For="@(() => user.ConfirmPassword)" />
            </div>
            <div class="text-danger mb-3">
                <span>@message</span>
            </div>

            <button class="btn bg-black text-white">
                Register
            </button>
            <NavLink href="login" class="btn btn-link text-black">Login</NavLink>
        </EditForm>
    </div>
</div>

@code {
    UserRegister user = new UserRegister();

    string message = string.Empty;
    string messageCssClass = string.Empty;

    private async Task HandleRegistration()
    {
        var result = await AuthService.Register(user);
        if (!result.Success)
        {
            messageCssClass = "text-danger";
            message = result.Message;
        }
        else NavigationManager.NavigateTo("login");
    }
}
