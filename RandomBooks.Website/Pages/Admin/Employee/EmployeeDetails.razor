@page "/admin/employee/{id:int}"
@layout Shared.Layouts.AdminLayout
@attribute [Authorize(Roles = "Admin")]
@inject IAuthService AuthService
@inject IUserService UserService
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager

@if (employee is null)
{
    if (loading)
    {
        <div style="text-align: center;">
            <h2>@message</h2>
        </div>
    }
    else
    {
        <div style="text-align: center;">
            <h2>No details found for the specified employee</h2>
        </div>
    }
}
else
{
    <div class="d-flex">
        <h2>@employee.Username</h2>
        @if (employee.Deactivated)
        {
            <button class="btn bg-black text-white fw-bold ms-auto" @onclick="Activate">
                Activate
            </button>
        }
        else
        {
            <button class="btn btn-danger fw-bold ms-auto" @onclick="Deactivate">
                Deactivate
            </button>
        }
        <button class="btn bg-black text-white fw-bold ms-2"
                @onclick="ResetPassword">
            Reset Password
        </button>
    </div>
    <hr />
    <div class="row">
        <div class="p-0 me-5" style="flex: 0;">
            <img src="@(employee.Image is null ? "user.svg" : employee.Image)">
        </div>
        <div class="col">
            <div class="d-flex">
                <h4 class="me-5">Firstname</h4>
                <h4 class="fw-normal text-secondary">@(employee.Firstname is null ? "not set" : employee.Firstname)</h4>
            </div>
            <div class="d-flex">
                <h4 class="me-5">Lastname</h4>
                <h4 class="fw-normal text-secondary">@(employee.Lastname is null ? "not set" : employee.Lastname)</h4>
            </div>
            <div class="d-flex">
                <h4 class="me-5">Email</h4>
                <h4 class="fw-normal text-secondary">@(employee.Email is null ? "not set" : employee.Email)</h4>
            </div>
            <div class="d-flex">
                <h4 class="me-5">Phone Number</h4>
                <h4 class="fw-normal text-secondary">@(employee.PhoneNumber is null ? "not set" : employee.PhoneNumber)</h4>
            </div>
            <div class="d-flex">
                <h4 class="me-5">Date Hired</h4>
                <h4 class="fw-normal text-secondary">@employee.DateJoined.ToString("dd MMM yyyy")</h4>
            </div>
            @if (employee.Deactivated)
            {
                <h2 class="text-danger">DEACTIVATED</h2>
            }
        </div>
    </div>
    <hr />

    <h2>Orders</h2>
    <div class="grid-container">
        @if (employee.Orders.Count == 0)
        {
            <center><h2 class="text-danger fw-light">No orders fulfilled</h2></center>
        }
        else
        {
            <Virtualize Context="order" Items="employee.Orders">
                <div class="container container-center mt-5" style="width: 680px; border: 1px solid black; border-radius: 20px;">
                    <div>
                        <div class="d-flex" style="width: 100%; margin: auto; margin-top: 7px;">
                            <div class="col me-5">
                                <a href="/admin/order/@order.Id" class="d-flex" style="cursor: pointer;">
                                    <h4 class="mb-0">Order</h4>
                                    <h4 class="mb-0 ms-3 fw-bold text-secondary">#@order.Id</h4>
                                </a>
                            </div>
                            <div class="d-flex col" style="flex: 2;">
                                <h4>Total:</h4>
                                <h4 class="ms-3 price">$ @order.Total</h4>
                            </div>
                            <div class="float-end" style="flex: 1;">
                                <h4 class="text-danger">@order.Payment</h4>
                            </div>
                            <div class="float-end">
                                <h4><strong>@order.DatePlaced.ToString("dd MMMM yyyy")</strong></h4>
                            </div>
                        </div>
                    </div>
                </div>
            </Virtualize>
        }
    </div>
}

@code {
    [Parameter]
    public int Id { get; set; }

    EmployeeDetailsResponse? employee = new();
    bool loading = true;
    string message = "Loading employee details...";

    protected override async Task OnParametersSetAsync()
    {
        var dbUser = await UserService.GetEmployeeDetails(Id);
        if (dbUser == null)
            employee = null;
        else employee = dbUser.Data;

        loading = false;
    }

    private async Task Deactivate()
    {
        var result = await UserService.DeactivateUser(Id);
        if (!result.Success)
            await JSRuntime.InvokeVoidAsync("alert", "Something went wrong");
        else employee = (await UserService.GetEmployeeDetails(Id)).Data;
    }


    private async Task Activate()
    {
        var result = await UserService.ActivateUser(Id);
        if (!result.Success)
            await JSRuntime.InvokeVoidAsync("alert", "Something went wrong");
        else employee = (await UserService.GetEmployeeDetails(Id)).Data;
    }

    private async Task ResetPassword()
    {
        var result = await AuthService.ChangePassword(new UserChangePassword
        {
            Password = employee.Username,
            ConfirmPassword = employee.Username
        }, Id);

        if (!result.Success)
        {
            await JSRuntime.InvokeVoidAsync("alert", $"Something went wrong\n{result.Message}");
            return;
        }
        
        await JSRuntime.InvokeVoidAsync("alert", "Password reset successfully!");
    }
}
