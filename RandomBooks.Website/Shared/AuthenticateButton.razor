@inject ILocalStorageService LocalStorage
@inject IAuthService AuthService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<AuthorizeView Roles="Admin">
    <Authorized>
        <button class="btn bg-white text-black" @onclick="BackToDashboard">Admin Dashboard</button>
        <button class="btn btn-danger" @onclick="Logout">Logout</button>
    </Authorized>
    <NotAuthorized>
        <AuthorizeView Roles="Customer" Context="Customers">
            <Authorized>
                <div class="dropdown">
                    <button @onclick="ToggleUserMenu"
                            @onfocusout="HideUserMenu"
                            class="btn btn-secondary dropdown-toggle user-button bg-white text-black">
                        Hello, <span class="text-danger fw-bold">@username</span>!
                    </button>
                    <div class="dropdown-menu dropdown-menu-end @UserMenuCssClass">
                        <a href="profile" class="dropdown-item text-black">Profile</a>
                        <a href="orders" class="dropdown-item text-black">Orders</a>
                        <hr />
                        <button class="dropdown-item text-black" @onclick="Logout">Logout</button>
                    </div>
                </div>
            </Authorized>
            <NotAuthorized>
                <div class="dropdown">
                    <button @onclick="ToggleUserMenu"
                            @onfocusout="HideUserMenu"
                            class="btn btn-secondary dropdown-toggle user-button bg-white text-black">
                        Authenticate
                    </button>
                    <div class="dropdown-menu dropdown-menu-end @UserMenuCssClass">
                        <a href="@GetReturnURL()" class="dropdown-item text-black">Login</a>
                        <a href="register" class="dropdown-item text-black">Register</a>
                    </div>
                </div>
            </NotAuthorized>
        </AuthorizeView>
    </NotAuthorized>
</AuthorizeView>

@code {
    private bool showUserMenu = false;
    private string username = string.Empty;
    private string UserMenuCssClass => showUserMenu ? "show-menu" : null;

    protected override async Task OnInitializedAsync()
    {
        username = await AuthService.GetUsername();
    }

    private void ToggleUserMenu() => showUserMenu = !showUserMenu;

    private async Task HideUserMenu()
    {
        await Task.Delay(100);
        showUserMenu = false;
    }

    private async Task Logout()
    {
        await LocalStorage.RemoveItemAsync("token");
        await AuthenticationStateProvider.GetAuthenticationStateAsync();
        NavigationManager.NavigateTo("");
    }

    private void BackToDashboard()
    {
        NavigationManager.NavigateTo("/admin/dashboard");
    }

    private string GetReturnURL()
    {
        var returnUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        if (returnUrl == string.Empty)
            return "login";
        return $"login?returnUrl={returnUrl}";
    }
}