@page "/admin/orders"
@layout Shared.Layouts.AdminLayout
@attribute [Authorize(Roles = "Admin")]
@inject IOrderService OrderService
@implements IDisposable

@if(OrderService.Orders == null)
{
    <h3>Orders</h3>
    <span>@OrderService.Message</span>
}
else if(OrderService.Orders.Count <= 0)
{
    <center class="mt-5">
        <h1>@OrderService.Message</h1>
    </center>
}
else
{
    <center><h2>Orders</h2></center>
    <Virtualize Context="order" Items="OrderService.Orders">
        <div class="container container-center mt-5" style="border: 1px solid black; border-radius: 20px;">
            <div>
                <div class="row d-flex" style="width: 100%; margin: auto; margin-top: 7px;">
                    <div class="col">
                        <a href="/admin/order/@order.Id" class="d-flex" style="cursor: pointer;">
                            <h4 class="mb-0" style="padding-top: 3px;">Order</h4>
                            <h4 class="mb-0 ms-5 fw-bold text-secondary" style="padding-top: 3px;">#@order.Id</h4>
                        </a>
                    </div>
                    <div class="col">
                        <h4>Placed By: <strong>@order.User</strong></h4>
                        @if (order.Rating != null)
                        {
                            <p class="mb-0 text-danger fw-bold">@order.Rating @(order.Rating > 1 ? "stars" : "star")</p>
                        }
                    </div>
                    <div class="col">
                        <h4 style="float: right;"><strong>@order.DatePlaced.ToString("dd MMMM yyyy")</strong></h4>
                    </div>
                </div>
                <hr />
                <div class="row d-flex" style="width: 100%; margin: auto;">
                    <div class="col-7">
                        <h4><strong>Products</strong></h4>
                        <div class="d-flex">
                            <h5 class="me-2 fw-bold">@order.ProductsCount</h5>
                            <h5 class="fw-light" style="margin-right: 80px;">@(order.ProductsCount == 1 ? "book" : "books")</h5>
                            <h5 class="me-2">Total:</h5>
                            <h5 class="price">$ @order.Total</h5>
                        </div>
                    </div>
                    <div class="col-5">
                        <div class="float-end">
                            <h4><strong>Status</strong></h4>
                            <div class="d-flex">
                                <h5>@order.LastModified.ToString("dd MMMM yyyy") &nbsp; - </h5>
                                <div class="col ms-4">
                                    <h5 class="text-danger">@order.Status</h5>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </Virtualize>

    <div class="mx-auto mt-5" style="text-align: center; @GetSpace()">
        <button class="btn btn-outline-black" style="margin: 2px;" disabled=@isFirstDisabled
                    @onclick="(() => SelectPage(1))">
            <p style="margin: 0; font-weight: 900;"><i class="oi oi-chevron-left"></i>&nbsp First</p>
        </button>

        @if (OrderService.PageCount <= 5)
        {
            for (var i = 1; i <= OrderService.PageCount; i++)
            {
                var page = i;
                <button class="btn @(i == OrderService.Page ? "bg-black text-white" : "btn-outline-black")"
                        style="margin: 2px;"
                        @onclick="(() => SelectPage(page))">@i</button>
            }
        }
        else if (OrderService.Page < 4)
        {
            for (var i = 1; i <= 4; i++)
            {
                var page = i;
                <button class="btn @(i == OrderService.Page ? "bg-black text-white" : "btn-outline-black")"
                        style="margin: 2px;"
                        @onclick="(() => SelectPage(page))">@i</button>
            }
            <p class="btn btn-outline-black" style="margin: 2px;">...</p>
        }
        else if (OrderService.Page > OrderService.PageCount - 3)
        {
            <p class="btn btn-outline-black" style="margin: 2px;">...</p>
            for (var i = OrderService.PageCount - 3; i <= OrderService.PageCount; i++)
            {
                var page = i;
                <button class="btn @(i == OrderService.Page ? "bg-black text-white" : "btn-outline-black")"
                        style="margin: 2px;"
                        @onclick="(() => SelectPage(page))">@i</button>
            }
        }
        else
        {
            <p class="btn btn-outline-black" style="margin: 2px;">...</p>
            for (var i = OrderService.Page - 2; i <= OrderService.Page + 2; i++)
            {
                var page = i;
                <button class="btn @(i == OrderService.Page ? "bg-black text-white" : "btn-outline-black")"
                        style="margin: 2px;"
                        @onclick="(() => SelectPage(page))">@i</button>
            }
            <p class="btn btn-outline-black" style="margin: 2px;">...</p>
        }

        <button class="btn btn-outline-black" style="margin: 2px;" disabled=@isLastDisabled
                @onclick="(() => SelectPage(OrderService.PageCount))">
            <p style="margin: 0; font-weight: 900;">Last &nbsp<i class="oi oi-chevron-right"></i></p>
        </button>
    </div>
}

@code {
    bool isFirstDisabled = true;
    bool isLastDisabled = false;

    protected override async Task OnInitializedAsync()
    {
        OrderService.InitializePages();
        await OrderService.GetAdminOrders();

        if (OrderService.PageCount == 1)
        {
            isFirstDisabled = true;
            isLastDisabled = true;
        }
        OrderService.OnChange += StateHasChanged;
    }

    public void Dispose() => OrderService.OnChange -= StateHasChanged;

    private async Task SelectPage(int page)
    {
        OrderService.Page = page;
        await OrderService.GetAdminOrders();

        if (page == 1)
        {
            isFirstDisabled = true;
            isLastDisabled = false;
        }
        else if (page == OrderService.PageCount)
        {
            isFirstDisabled = false;
            isLastDisabled = true;
        }
        else
        {
            isFirstDisabled = false;
            isLastDisabled = false;
        }
    }

    private string GetSpace()
    {
        if (OrderService.Orders.Count() < 5)
            return $"margin-top: {99 + 146 * (5 - OrderService.Orders.Count())}px !important;";
        return string.Empty;
    }
}
